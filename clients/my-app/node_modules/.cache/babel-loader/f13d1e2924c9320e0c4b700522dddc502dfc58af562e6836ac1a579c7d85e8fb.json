{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pet_Food_Shop_Website\\\\clients\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport \"./Login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [captchaValue, setCaptchaValue] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!captchaValue) {\n      alert(\"Please verify the captcha.\");\n      return;\n    }\n    console.log(email);\n  };\n  const handleCaptchaChange = value => {\n    setCaptchaValue(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"youremail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: pass,\n        onChange: e => setPass(e.target.value),\n        type: \"password\",\n        placeholder: \"********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: \"YOUR_SITE_KEY\",\n        onChange: handleCaptchaChange,\n        theme: \"dark\" // You can change the theme to 'light' if you prefer.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => props.onFormSwitch(\"register\"),\n      children: \"Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"forg-btn\",\n      onClick: () => props.onFormSwitch(\"register\"),\n      children: \"Forget Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"WKy/LqqcxnaMmcB1hFp/2+EEjdM=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ReCAPTCHA","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","pass","setPass","captchaValue","setCaptchaValue","handleSubmit","e","preventDefault","alert","console","log","handleCaptchaChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","target","type","placeholder","id","name","sitekey","theme","onClick","onFormSwitch","_c","$RefreshReg$"],"sources":["E:/Pet_Food_Shop_Website/clients/my-app/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport \"./Login.scss\";\r\n\r\nexport const Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [captchaValue, setCaptchaValue] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!captchaValue) {\r\n      alert(\"Please verify the captcha.\");\r\n      return;\r\n    }\r\n    console.log(email);\r\n  };\r\n\r\n  const handleCaptchaChange = (value) => {\r\n    setCaptchaValue(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"youremail@gmail.com\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          value={pass}\r\n          onChange={(e) => setPass(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"********\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <ReCAPTCHA\r\n          sitekey=\"YOUR_SITE_KEY\"\r\n          onChange={handleCaptchaChange}\r\n          theme=\"dark\" // You can change the theme to 'light' if you prefer.\r\n        />\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n      <button className=\"link-btn\" onClick={() => props.onFormSwitch(\"register\")}>\r\n        Don't have an account? Register here.\r\n      </button>\r\n      <button className=\"forg-btn\" onClick={() => props.onFormSwitch(\"register\")}>\r\n        Forget Password?\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}