{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pet_Food_Shop_Website\\\\clients\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { createBrowserRouter, Outlet, RouterProvider } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Products from \"./pages/Products/Products\";\nimport Product from \"./pages/Product/Product\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Login } from \"./components/Login/Login\";\nimport { Register } from \"./components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = ({\n  isLoggedIn\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Layout;\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Layout, {\n    isLoggedIn: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 14\n  }, this),\n  // Initially set isLoggedIn to false\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/Products/:id\",\n    element: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/Product/:id\",\n    element: /*#__PURE__*/_jsxDEV(Product, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this)\n  }]\n}, {\n  path: \"/login/1\",\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 14\n  }, this)\n}]);\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = (email, password) => {\n    // Simulate login logic (replace this with actual API calls or authentication logic)\n    const mockUser = {\n      email: \"testuser@example.com\",\n      password: \"testpassword\"\n    };\n    if (email === mockUser.email && password === mockUser.password) {\n      setIsLoggedIn(true); // Set isLoggedIn to true when login is successful\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Layout, {\n          isLoggedIn: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onFormSubmit: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","createBrowserRouter","Outlet","RouterProvider","Home","Products","Product","Navbar","Footer","useState","Login","Register","jsxDEV","_jsxDEV","Layout","isLoggedIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","router","path","element","App","_s","setIsLoggedIn","handleLogin","email","password","mockUser","alert","onFormSubmit","_c2","$RefreshReg$"],"sources":["E:/Pet_Food_Shop_Website/clients/my-app/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  createBrowserRouter,\n  Outlet,\n  RouterProvider,\n} from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Products from \"./pages/Products/Products\";\nimport Product from \"./pages/Product/Product\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Login } from \"./components/Login/Login\";\nimport { Register } from \"./components/Register/Register\";\n\nconst Layout = ({ isLoggedIn }) => {\n  return (\n    <div className=\"app\">\n      {isLoggedIn && <Navbar />} {/* Render the Navbar only if the user is logged in */}\n      <Outlet />\n      <Footer />\n    </div>\n  );\n};\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Layout isLoggedIn={false} />, // Initially set isLoggedIn to false\n    children: [\n      {\n        path: \"/\",\n        element: <Home />,\n      },\n      {\n        path: \"/Products/:id\",\n        element: <Products />,\n      },\n      {\n        path: \"/Product/:id\",\n        element: <Product />,\n      },\n    ],\n  },\n  {\n    path: \"/login/1\",\n    element: <Login />,\n  },\n]);\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = (email, password) => {\n    // Simulate login logic (replace this with actual API calls or authentication logic)\n    const mockUser = {\n      email: \"testuser@example.com\",\n      password: \"testpassword\",\n    };\n\n    if (email === mockUser.email && password === mockUser.password) {\n      setIsLoggedIn(true); // Set isLoggedIn to true when login is successful\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <RouterProvider router={router}>\n        <div className=\"App\">\n          {isLoggedIn ? (\n            <Layout isLoggedIn={true} />\n          ) : (\n            <Login onFormSubmit={handleLogin} />\n          )}\n        </div>\n      </RouterProvider>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}