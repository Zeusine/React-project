{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pet_Food_Shop_Website\\\\clients\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// Login.jsx\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // Add your login logic here. This is just a basic example.\n    const user = {\n      email\n    }; // Replace this with actual user data after successful login.\n    const token = 'your_generated_jwt_token'; // Replace this with actual token after successful login.\n    dispatch(login({\n      user,\n      token\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"w70gyhILRn2gb+uUCaZQEuh+eIw=\", false, function () {\n  return [useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useDispatch","login","jsxDEV","_jsxDEV","Login","_s","dispatch","email","setEmail","password","setPassword","handleLogin","user","token","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Pet_Food_Shop_Website/clients/my-app/src/components/Login/Login.jsx"],"sourcesContent":["// Login.jsx\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../redux/authSlice';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Add your login logic here. This is just a basic example.\r\n    const user = { email }; // Replace this with actual user data after successful login.\r\n    const token = 'your_generated_jwt_token'; // Replace this with actual token after successful login.\r\n    dispatch(login({ user, token }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,IAAI,GAAG;MAAEL;IAAM,CAAC,CAAC,CAAC;IACxB,MAAMM,KAAK,GAAG,0BAA0B,CAAC,CAAC;IAC1CP,QAAQ,CAACL,KAAK,CAAC;MAAEW,IAAI;MAAEC;IAAM,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAOY,IAAI,EAAC,OAAO;MAACC,KAAK,EAAET,KAAM;MAACU,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/EpB,OAAA;MAAOY,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEP,QAAS;MAACQ,QAAQ,EAAGC,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFpB,OAAA;MAAQqB,OAAO,EAAEb,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnBID,KAAK;EAAA,QACQJ,WAAW;AAAA;AAAAyB,EAAA,GADxBrB,KAAK;AAqBX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}